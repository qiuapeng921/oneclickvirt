export default {
  common: {
    login: 'Login',
    logout: 'Logout',
    register: 'Register',
    submit: 'Submit',
    cancel: 'Cancel',
    confirm: 'Confirm',
    save: 'Save',
    update: 'Update',
    delete: 'Delete',
    edit: 'Edit',
    add: 'Add',
    create: 'Create',
    search: 'Search',
    reset: 'Reset',
    back: 'Back',
    close: 'Close',
    loading: 'Loading...',
    success: 'Success',
    error: 'Error',
    warning: 'Warning',
    info: 'Info',
    yes: 'Yes',
    no: 'No',
    refresh: 'Refresh',
    copy: 'Copy',
    download: 'Download',
    upload: 'Upload',
    view: 'View',
    export: 'Export',
    import: 'Import',
    actions: 'Actions',
    status: 'Status',
    name: 'Name',
    description: 'Description',
    createdAt: 'Created At',
    createTime: 'Create Time',
    updatedAt: 'Updated At',
    all: 'All',
    selectAll: 'Select All',
    clear: 'Clear',
    filter: 'Filter',
    more: 'More',
    total: 'Total',
    enable: 'Enable',
    disable: 'Disable',
    enabled: 'Enabled',
    disabled: 'Disabled',
    normal: 'Normal',
    start: 'Start',
    stop: 'Stop',
    restart: 'Restart',
    details: 'Details',
    settings: 'Settings',
    apply: 'Apply',
    approve: 'Approve',
    reject: 'Reject',
    pending: 'Pending',
    processing: 'Processing',
    completed: 'Completed',
    failed: 'Failed',
    running: 'Running',
    stopped: 'Stopped',
    unknown: 'Unknown',
    user: 'User',
    admin: 'Administrator',
    normalUser: 'Normal User',
    notSet: 'Not Set',
    questionMark: '?',
    comma: ', ',
    period: '. ',
    ellipsis: '...',
    leftParen: ' (',
    rightParen: ')',
    inLocation: ' in',
    backToHome: 'Back to Home'
  },
  navbar: {
    switchTo: 'Switch to',
    adminView: 'Admin View',
    userView: 'User View',
    onlyAdminCanSwitch: 'Only administrators can switch view modes',
    switchedTo: 'Switched to',
    noPermission: 'You do not have permission to access this page',
    confirmLogout: 'Are you sure you want to logout?',
    tip: 'Tip',
    switchLanguage: 'Switch Language',
    languageSwitched: 'Language switched'
  },
  login: {
    title: 'User Login',
    subtitle: 'Welcome back, please login to your account',
    username: 'Username',
    password: 'Password',
    captcha: 'Captcha',
    rememberMe: 'Remember Me',
    forgotPassword: 'Forgot Password?',
    noAccount: "Don't have an account?",
    registerNow: 'Register Now',
    adminLogin: 'Admin Login',
    userLogin: 'User Login',
    backToUserLogin: 'Back to User Login',
    thirdPartyLogin: 'Third-party Login or Register',
    pleaseEnterUsername: 'Please enter username',
    pleaseEnterPassword: 'Please enter password',
    pleaseEnterAdminUsername: 'Please enter admin username',
    pleaseEnterCaptcha: 'Please enter captcha',
    captchaAlt: 'Captcha',
    loggingIn: 'Logging in...',
    loginSuccess: 'Login successful',
    loginFailed: 'Login failed',
    getOAuth2ConfigFailed: 'Failed to get OAuth2 configuration:'
  },
  adminLogin: {
    title: 'Admin Login',
    subtitle: 'Please enter admin account and password'
  },
  register: {
    title: 'User Registration',
    subtitle: 'Create your account',
    disabled: {
      title: 'Registration Temporarily Closed',
      message: 'The system administrator has temporarily disabled user registration. Please try again later.',
      backToLogin: 'Back to Login'
    },
    username: 'Username',
    password: 'Password',
    confirmPassword: 'Confirm Password',
    captcha: 'Captcha',
    inviteCode: 'Invite Code',
    pleaseEnterUsername: 'Please enter username',
    pleaseEnterPassword: 'Please enter password',
    pleaseConfirmPassword: 'Please enter password again',
    pleaseEnterCaptcha: 'Please enter captcha',
    pleaseEnterInviteCode: 'Please enter invite code',
    passwordHint: 'Password must be at least 8 characters and include uppercase, lowercase, numbers, and special characters',
    passwordMismatch: 'The passwords entered do not match',
    registerButton: 'Register',
    hasAccount: 'Already have an account?',
    loginNow: 'Login Now',
    registering: 'Registering...',
    registerSuccess: 'Registration successful',
    registerFailed: 'Registration failed'
  },
  forgotPassword: {
    title: 'Forgot Password',
    subtitle: 'Please enter your email address and we will send you a password reset link',
    email: 'Email Address',
    pleaseEnterEmail: 'Please enter email address',
    sendResetLink: 'Send Reset Link',
    backToLogin: 'Back to Login',
    emailSent: 'Reset link has been sent to your email',
    checkEmail: 'Please check your email'
  },
  resetPassword: {
    title: 'Reset Password',
    subtitle: 'Please enter new password',
    newPassword: 'New Password',
    confirmNewPassword: 'Confirm New Password',
    pleaseEnterNewPassword: 'Please enter new password',
    pleaseConfirmNewPassword: 'Please enter new password again',
    resetButton: 'Reset Password',
    resetSuccess: 'Password reset successful',
    resetFailed: 'Password reset failed'
  },
  oauth2Callback: {
    processing: 'Processing login information...',
    backToLogin: 'Back to Login',
    loginSuccess: 'Login successful! Redirecting...',
    noTokenError: 'No login credentials received',
    welcomeBack: 'Welcome back, {username}!',
    user: 'User',
    callbackError: 'OAuth2 callback processing failed:',
    loginFailed: 'Login processing failed, please try again'
  },
  init: {
    title: 'System Initialization',
    subtitle: 'First-time use requires system initialization',
    fillDefaults: 'Fill Default Information',
    initSystem: 'Initialize System',
    infoTitle: 'Initialization Instructions',
    infoDescription: 'System initialization requires the following information:',
    infoDatabaseDesc: 'Configure MySQL or MariaDB database connection information',
    infoAdminDesc: 'Create an administrator account with highest system privileges',
    infoUserDesc: 'Create a regular user account with basic functionality access',
    database: {
      tabLabel: 'Database Configuration',
      type: 'Database Type',
      mysqlRecommended: 'MySQL (Recommended for AMD64 architecture)',
      mariadbRecommended: 'MariaDB (Recommended for ARM64 architecture)',
      architecture: 'Architecture',
      autoSelectHint: 'The system will automatically select the appropriate database type based on architecture, or you can choose manually',
      host: 'Database Host',
      port: 'Database Port',
      dbName: 'Database Name',
      username: 'Username',
      password: 'Password',
      passwordPlaceholder: 'Database password',
      testConnection: 'Test Database Connection'
    },
    admin: {
      tabLabel: 'Administrator Settings',
      username: 'Admin Username',
      usernamePlaceholder: 'Enter admin username',
      password: 'Admin Password',
      passwordPlaceholder: 'Enter admin password',
      passwordHint: 'Password must be at least 8 characters and include uppercase, lowercase, numbers, and special characters (!@#$%^&*, etc.)',
      confirmPassword: 'Confirm Password',
      confirmPasswordPlaceholder: 'Enter password again',
      email: 'Admin Email',
      emailPlaceholder: 'Enter admin email'
    },
    user: {
      tabLabel: 'Regular User Settings',
      username: 'Username',
      usernamePlaceholder: 'Enter username',
      password: 'User Password',
      passwordPlaceholder: 'Enter user password',
      passwordHint: 'Password must be at least 8 characters and include uppercase, lowercase, numbers, and special characters (!@#$%^&*, etc.)',
      confirmPassword: 'Confirm Password',
      confirmPasswordPlaceholder: 'Enter password again',
      email: 'User Email',
      emailPlaceholder: 'Enter user email'
    },
    messages: {
      defaultsFilled: 'Default information filled',
      formNotReady: 'Database configuration form not ready',
      dbConnSuccess: 'Database connection successful',
      dbTestSuccess: 'Database connection test successful',
      dbConnFailed: 'Database connection failed',
      dbTestFailed: 'Database connection test failed',
      initSuccess: 'System initialization successful! Redirecting to homepage...',
      initFailed: 'System initialization failed',
      initRetry: 'System initialization failed, please try again'
    },
    debug: {
      pageMounted: 'Init page mounted, starting polling check'
    }
  },
  home: {
    title: 'OneClickVirt',
    nav: {
      login: 'Login',
      register: 'Register'
    },
    hero: {
      title: 'Open Source Virtualization Management Platform',
      description: 'OneClickVirt provides an easy-to-use open-source virtual machine and container management platform, supporting multiple virtualization technologies.',
      loginButton: 'Account Login',
      registerButton: 'Register Now'
    },
    features: {
      vm: {
        title: 'Virtual Machine Management',
        description: 'Quickly create and manage virtual machine instances'
      },
      container: {
        title: 'Container Management',
        description: 'Quickly create and manage container instances'
      },
      monitoring: {
        title: 'Monitoring Dashboard',
        description: 'Real-time resource usage monitoring'
      }
    },
    platforms: {
      title: 'Supported Virtualization Platforms',
      description: 'One-click integration with multiple mainstream virtualization technologies'
    },
    announcements: {
      title: 'System Announcements',
      typeHomepage: 'Homepage Announcement',
      typeTopbar: 'Top Bar Announcement'
    },
    footer: {
      coreProjects: 'Core Projects',
      relatedProjects: 'Related Projects',
      moreProjects: 'More Projects',
      supportAndDocs: 'Support & Documentation',
      documentation: 'Documentation',
      feedback: 'Issue Feedback',
      allRightsReserved: 'All rights reserved.',
      openSourceProject: 'Open Source Projects by OneClickVirt'
    },
    errors: {
      fetchAnnouncementsFailed: 'Failed to fetch announcements:',
      checkInitFailed: 'Failed to check system initialization status:'
    },
    debug: {
      checkingInit: 'Checking initialization status on homepage:',
      needInitRedirect: 'System needs initialization, redirecting to init page',
      serverConnectionFailed: 'Server connection failed, may need initialization, redirecting to init page'
    }
  },
  sidebar: {
    dashboard: 'Dashboard',
    myInstances: 'My Instances',
    apply: 'Apply',
    taskList: 'Task List',
    personalCenter: 'Personal Center',
    userManagement: 'User Management',
    inviteCodeManagement: 'Invite Code Management',
    providerManagement: 'Provider Management',
    taskManagement: 'Task Management',
    instanceManagement: 'Instance Management',
    trafficManagement: 'Traffic Management',
    portManagement: 'Port Management',
    systemImages: 'System Images',
    announcementManagement: 'Announcement Management',
    systemConfiguration: 'System Configuration'
  },
  user: {
    dashboard: {
      title: 'User Dashboard',
      welcome: 'Welcome back, {name}!',
      subtitle: 'This is your personal control panel',
      levelTag: 'Level {level} - {text}',
      resourceQuota: 'Resource Quota Limits',
      instanceCount: 'Instance Count',
      instanceCountDesc: 'Total number of VMs and containers that can be created',
      cpuCores: 'CPU Cores',
      cores: ' cores',
      cpuCoresDesc: 'Total CPU cores across all instances',
      memorySize: 'Memory Size',
      memorySizeDesc: 'Total memory across all instances',
      storageSpace: 'Storage Space',
      storageSpaceDesc: 'Total storage space across all instances',
      trafficLimit: 'Traffic Limit',
      unlimited: 'Unlimited',
      unlimitedTraffic: 'No Traffic Limit',
      trafficLimitDesc: 'Monthly traffic quota usage',
      unlimitedTrafficDesc: 'Unlimited traffic for current level',
      systemAnnouncements: 'System Announcements',
      refreshingQuota: 'Refreshing quota information...',
      quotaRefreshed: 'Quota information refreshed',
      loadQuotaFailed: 'Failed to load user quota information',
      getUserLimitsFailed: 'Failed to get user limits',
      getAnnouncementsFailed: 'Failed to get announcements',
      normalUser: 'Normal User',
      enjoyIt: 'Enjoy it',
      overview: 'Overview',
      quickActions: 'Quick Actions',
      recentInstances: 'Recent Instances',
      resourceUsage: 'Resource Usage',
      createInstance: 'Create Instance',
      viewAllInstances: 'View All Instances',
      viewResources: 'View Resources',
      noInstances: 'No instances',
      cpuUsage: 'CPU Usage',
      memoryUsage: 'Memory Usage',
      diskUsage: 'Disk Usage',
      networkUsage: 'Network Usage'
    },
    profile: {
      title: 'Personal Center',
      loadingProfile: 'Loading profile...',
      basicInfo: 'Basic Information',
      passwordManagement: 'Password Management',
      editProfile: 'Edit Profile',
      changePassword: 'Change Password',
      changeAvatar: 'Change Avatar',
      personalInfo: 'Personal Information',
      accountInfo: 'Account Information',
      username: 'Username',
      nickname: 'Nickname',
      email: 'Email',
      phone: 'Phone',
      avatar: 'Avatar',
      oldPassword: 'Old Password',
      newPassword: 'New Password',
      confirmPassword: 'Confirm Password',
      usernameCannotChange: 'Username cannot be changed',
      pleaseEnterNickname: 'Please enter nickname',
      pleaseEnterEmail: 'Please enter email address',
      pleaseEnterPhone: 'Please enter phone number',
      saveChanges: 'Save Changes',
      updateSuccess: 'Profile updated successfully',
      updateFailed: 'Update failed',
      updateFailedRetry: 'Update failed, please retry',
      autoResetPassword: 'Auto Reset Password',
      passwordAutoReset: 'Password Auto Reset',
      autoResetDescription1: 'If you forgot your current password, you can use this feature to automatically generate a new secure password.',
      autoResetDescription2: 'The new password will be displayed below and sent to your connected communication channels.',
      autoResetDescription3: 'Please ensure you have at least one communication channel connected to receive the new password backup.',
      passwordResetSuccess: 'Password Reset Successful',
      newPasswordGenerated: 'New password generated, please copy and keep it safe',
      passwordSentToChannel: 'New password has been sent to your connected communication channels, please keep it safe',
      resetPassword: 'Reset Password',
      fileValidationFailed: 'File validation failed',
      avatarUploadFailed: 'Avatar upload failed',
      avatarUpdateSuccess: 'Avatar updated successfully',
      passwordResetSuccessWithMessage: 'Password reset successful, new password is displayed below and sent to your communication channels',
      passwordResetSuccessDefault: 'Password reset successful, new password has been sent to your connected communication channels',
      passwordResetFailed: 'Password reset failed',
      passwordResetFailedRetry: 'Password reset failed, please retry',
      noPasswordToCopy: 'No password to copy',
      passwordCopied: 'Password copied to clipboard',
      copyFailed: 'Copy failed, please copy manually',
      confirmResetPasswordTitle: 'Confirm Reset Password',
      confirmResetPasswordMessage: 'Are you sure you want to reset password? A new password will be automatically generated and sent to your connected communication channels.',
      deleteConfirmNote: 'This operation cannot be undone, please proceed with caution!'
    },
    instances: {
      title: 'My Instances',
      subtitle: 'Manage your virtual machines and container instances',
      loadingInstances: 'Loading instances...',
      searchByName: 'Search by instance name',
      searchByProvider: 'Search by provider name',
      selectType: 'Select type',
      selectStatus: 'Select status',
      search: 'Search',
      reset: 'Reset',
      allTypes: 'All',
      allStatuses: 'All',
      vm: 'Virtual Machine',
      container: 'Container',
      statusRunning: 'Running',
      statusStopped: 'Stopped',
      statusPaused: 'Paused',
      statusCreating: 'Creating',
      statusUnavailable: 'Unavailable',
      statusError: 'Error',
      statusFailed: 'Creation Failed',
      provider: 'Provider',
      configuration: 'Configuration',
      bandwidth: 'Bandwidth',
      system: 'System',
      createdAt: 'Created At',
      portMapping: 'Port Mapping',
      publicIP: 'Public IP',
      unassigned: 'Unassigned',
      morePortsCount: '+{count} more',
      trafficDetail: 'Traffic Detail',
      viewDetail: 'View Detail',
      noInstances: 'You have no instances yet',
      applyNow: 'Apply Now',
      total: 'Total',
      refreshSuccess: 'Refreshed, {count} instances in total',
      loadFailed: 'Failed to load instance list',
      loadFailedNetwork: 'Failed to load instance list, please check network connection',
      instanceInvalid: 'Invalid instance information',
      cannotViewDetail: 'Instance is currently in "{status}" state and cannot view details. Please wait for the instance to enter running or stopped state.',
      cores: ' cores'
    },
    instanceDetail: {
      backToList: 'Back to List',
      vm: 'Virtual Machine',
      container: 'Container',
      start: 'Start',
      stop: 'Stop',
      restart: 'Restart',
      resetSystem: 'Reset System',
      resetPassword: 'Reset Password',
      delete: 'Delete',
      hardware: 'Hardware',
      cpu: 'CPU',
      memory: 'Memory',
      storage: 'Storage',
      bandwidth: 'Bandwidth',
      core: 'Core',
      overview: 'Overview',
      sshConnection: 'SSH Connection',
      publicIPv4: 'Public IPv4',
      none: 'None',
      copy: 'Copy',
      ipv6: 'IPv6',
      sshPort: 'SSH Port',
      username: 'Username',
      password: 'Password',
      show: 'Show',
      hide: 'Hide',
      portMapping: 'Port Mapping',
      publicIP: 'Public IP',
      portType: 'Port Type',
      manualAdd: 'Manual Add',
      rangeMapping: 'Range Mapping',
      publicPort: 'Public Port',
      internalPort: 'Internal Port',
      protocol: 'Protocol',
      status: 'Status',
      active: 'Active',
      unused: 'Unused',
      connectionInfo: 'Connection Info',
      statistics: 'Statistics',
      trafficOverlimit: '⚠️ Over Limit',
      normalUsage: 'Normal Usage',
      unknownType: 'Unknown Type',
      getDetailFailed: 'Failed to get instance details',
      trafficLimitWarning: 'This instance has been restricted due to traffic limit exceeded',
      getMonitoringFailed: 'Failed to get monitoring data',
      actionStart: 'Start',
      actionStop: 'Stop',
      actionRestart: 'Restart',
      actionReset: 'Reset System',
      actionDelete: 'Delete',
      trafficLimitNotice: 'Traffic Limit Notice',
      gotIt: 'Got It',
      confirmOperation: 'Confirm Operation',
      confirm: 'Confirm',
      cancel: 'Cancel',
      resetSystemNotice: 'System reset takes some time. Please wait for the instance status to become "Running" in the instance list before entering the details page',
      resetPasswordTitle: 'Reset Instance Password',
      resetPasswordFailed: 'Failed to create password reset task',
      nothingToCopy: 'Nothing to copy',
      copiedToClipboard: 'Copied to clipboard',
      statusRunning: 'Running',
      statusStopped: 'Stopped',
      statusPaused: 'Paused',
      statusUnavailable: 'Unavailable',
      statusError: 'Error',
      userTrafficWarning: 'User Traffic Limit Warning',
      dualTrafficWarning: 'Dual Traffic Limit Warning',
      trafficWarning: 'Traffic Limit Warning',
      providerOfflineWarning: 'Provider Node Offline',
      providerOfflineDesc: 'The provider node for this instance is currently offline and the instance may not be accessible. Please contact administrator or try again later.',
      instanceUnavailableWarning: 'Instance Unavailable',
      instanceUnavailableDesc: 'This instance is temporarily unavailable due to provider node offline. When the server recovers, you may need to manually restart the instance.',
      basicInfo: 'Basic Information',
      os: 'Operating System',
      createdAt: 'Created At',
      expiredAt: 'Expires At',
      networkType: 'Network Configuration Type',
    },
    tasks: {
      title: 'Task List',
      subtitle: 'View your instance operation task status',
      selectNode: 'Select Node',
      selectTaskType: 'Select Task Type',
      selectStatus: 'Select Status',
      all: 'All',
      taskTypeCreate: 'Create Instance',
      taskTypeStart: 'Start Instance',
      taskTypeStop: 'Stop Instance',
      taskTypeRestart: 'Restart Instance',
      taskTypeReset: 'Reset System',
      taskTypeDelete: 'Delete Instance',
      statusPending: 'Pending',
      statusProcessing: 'Processing',
      statusRunning: 'Running',
      statusCompleted: 'Completed',
      statusFailed: 'Failed',
      statusCancelled: 'Cancelled',
      statusCancelling: 'Cancelling',
      statusTimeout: 'Timeout',
      statusMessagePending: 'Waiting for scheduling...',
      statusMessageProcessing: 'Preparing...',
      statusMessageRunning: 'Executing...',
      statusMessageCancelling: 'Cancelling...',
      statusMessageDefault: 'Processing...',
      search: 'Search',
      reset: 'Reset',
      filter: 'Filter',
      refresh: 'Refresh',
      noTasks: 'No tasks',
      taskID: 'Task ID',
      taskType: 'Task Type',
      instanceName: 'Instance Name',
      provider: 'Provider',
      status: 'Status',
      createdAt: 'Created At',
      updatedAt: 'Updated At',
      operations: 'Operations',
      viewDetail: 'View Detail',
      loadSuccess: 'Task list loaded successfully',
      loadFailed: 'Failed to load task list',
      loadFailedNetwork: 'Failed to load task list, please check network connection',
      noTasksDescription: 'No tasks yet',
      createInstance: 'Create Instance',
      newInstance: 'New Instance',
      noTasksForProvider: 'No tasks for this provider',
      confirmCancel: 'Confirm Cancel',
      taskCancelled: 'Task cancelled',
      cancelTaskFailed: 'Failed to cancel task',
      unknown: 'Unknown',
      request: 'Request',
      submitted: 'submitted',
      processing: 'processing',
      system: 'System',
      willCreateTask: 'will create an asynchronous task to execute',
      operation: 'operation',
      taskCreated: 'task created',
      checkProgress: 'Please check progress in',
      taskList: 'task list',
      runningTasksTitle: 'Running Tasks',
      pendingQueueTitle: 'Pending Queue',
      historyTasksTitle: 'History Tasks',
      createdTime: 'Created Time',
      idle: 'Idle',
      executing: 'Executing',
      tasksCount: 'tasks',
      refreshedTotal: 'Refreshed, total {count} tasks',
      estimatedCompletion: 'Estimated Completion',
      cancel: 'Cancel',
      duration: 'Duration',
      cancelReason: 'Cancel Reason',
      seconds: 's',
      minutes: 'm',
      hours: 'h',
      apiLoadTasks: 'Load Task List',
      apiLoadProviders: 'Load Provider List'
    },
    trafficOverview: {
      title: 'Traffic Usage Statistics',
      refresh: 'Refresh',
      vnstatRealtime: 'vnStat Real-time Data',
      basicData: 'Basic Data',
      monthlyUsage: 'Monthly Traffic Usage',
      usagePercent: 'Usage',
      limitExceeded: 'Traffic limit exceeded',
      resetTime: 'Traffic reset time',
      detailedStats: 'Detailed Statistics',
      todayUsage: 'Today',
      weekUsage: 'This Week',
      monthUsage: 'This Month',
      uploadTotal: 'Total Upload',
      downloadTotal: 'Total Download',
      viewDetails: 'View Details',
      hideDetails: 'Hide Details',
      noData: 'No traffic data available',
      loadFailed: 'Failed to load traffic data',
      trafficStats: 'Traffic Statistics',
      viewDetailedStats: 'View Detailed Statistics',
      currentMonthUsage: 'Current Month Usage',
      resetOn1st: 'Resets on 1st of each month',
      historicalStats: 'Historical Statistics'
    },
    resources: {
      title: 'Resource Overview',
      total: 'Total',
      used: 'Used',
      available: 'Available',
      cpuCores: 'CPU Cores',
      memoryGB: 'Memory (GB)',
      diskGB: 'Disk (GB)',
      bandwidth: 'Bandwidth',
      instances: 'Instances',
      quota: 'Quota',
      usage: 'Usage'
    },
    apply: {
      title: 'Apply for Resources',
      subtitle: 'Select a server and configure your virtual machine or container instance',
      userQuotaInfo: 'User Quota Information',
      maxInstances: 'Max Instances',
      cpuCoreLimit: 'CPU Core Limit',
      memoryLimit: 'Memory Limit',
      diskLimit: 'Disk Limit',
      trafficLimit: 'Traffic Limit',
      cores: ' cores',
      selectProvider: 'Select Server',
      refresh: 'Refresh',
      location: 'Location',
      availableInstances: 'Available Instances',
      container: 'Container',
      vm: 'VM',
      unlimited: 'Unlimited',
      noProvidersAvailable: 'No available server nodes at the moment',
      possibleReasons: 'Possible reasons',
      reasonNodeDown: 'Node resources not ready',
      reasonInstanceLimit: 'Server instance limit reached or not met',
      reasonNoPermission: 'Server not authorized or check failed',
      statusActive: 'Active',
      statusOffline: 'Offline',
      statusPartial: 'Partially Available',
      statusInactive: 'Inactive',
      noProvidersDescription: 'No available server nodes',
      noProvidersMessage: 'No available server nodes at the moment',
      noProvidersHint: 'Possible reasons: node resources not synced, server offline, or incomplete configuration',
      configInstance: 'Configure Instance',
      instanceType: 'Instance Type',
      selectInstanceType: 'Select instance type',
      systemImage: 'System Image',
      selectSystemImage: 'Select system image',
      imageRequirements: 'Min: {memory}MB RAM / {disk}GB Disk',
      memorySpec: 'Memory',
      selectMemorySpec: 'Select memory',
      diskSpec: 'Disk',
      selectDiskSpec: 'Select disk',
      bandwidthSpec: 'Bandwidth',
      selectBandwidthSpec: 'Select bandwidth',
      cpuSpec: 'CPU',
      selectCpuSpec: 'Select CPU',
      remarks: 'Remarks',
      remarksPlaceholder: 'Enter remarks (optional)',
      submitApplication: 'Submit Application',
      pleaseSelectInstanceType: 'Please select instance type',
      pleaseSelectSystemImage: 'Please select system image',
      pleaseSelectMemorySpec: 'Please select memory',
      pleaseSelectDiskSpec: 'Please select disk',
      pleaseSelectBandwidthSpec: 'Please select bandwidth',
      pleaseSelectCpuSpec: 'Please select CPU',
      nodeNotSupportContainer: 'This node does not support container type',
      nodeContainerSlotsFull: 'Insufficient container slots on this node',
      autoSwitchToVM: 'Automatically switched to VM type',
      nodeNotSupportVM: 'This node does not support VM type',
      nodeVMSlotsFull: 'Insufficient VM slots on this node',
      autoSwitchToContainer: 'Automatically switched to container type',
      pleaseSelectProvider: 'Please select a server first',
      providerNotSupportType: 'The server does not support the selected instance type or user level is insufficient',
      createInstanceFailed: 'Failed to create instance',
      refreshedProviders: 'Refreshed, {count} servers available',
      noProvidersRetry: 'No server nodes available currently, please try again later or contact administrator',
      instanceTypeNotSupported: 'The server does not support the selected instance type or user level is insufficient',
      instanceCreatedSuccess: 'Instance creation request submitted, processing in background...',
      taskIdInfo: 'Task ID: {taskId}, you can check the progress on the task management page',
      duplicateTaskWarning: 'You already have an instance creation task in progress, please try again later or check the task page',
      submitFailed: 'Failed to submit application, please try again later',
      requestTimeout: 'Request timeout, please try again later or check the task page',
      pleaseSelectProvider: 'Please select a server first',
      nodeResourceInsufficient: 'Insufficient resources on this node, please select another node',
      networkConfig: {
        dedicatedIPv4: 'Dedicated IPv4',
        dedicatedIPv6: 'Dedicated IPv6',
        ipv6Only: 'IPv6 Only'
      }
    }
  },
  admin: {
    dashboard: {
      title: 'Admin Dashboard',
      systemOverview: 'System Overview',
      statistics: 'Statistics',
      totalUsers: 'Total Users',
      totalProviders: 'Total Servers',
      totalVMs: 'Total VMs',
      totalContainers: 'Total Containers',
      totalInstances: 'Total Instances',
      systemHealth: 'System Health',
      recentActivities: 'Recent Activities',
      quickStats: 'Quick Stats',
      loadDataFailed: 'Failed to load dashboard data'
    },
    users: {
      title: 'User Management',
      addUser: 'Add User',
      editUser: 'Edit User',
      deleteUser: 'Delete User',
      userId: 'User ID',
      username: 'Username',
      email: 'Email',
      nickname: 'Nickname',
      level: 'Level',
      userType: 'User Type',
      role: 'Role',
      status: 'Status',
      createdAt: 'Created At',
      lastLogin: 'Last Login',
      actions: 'Actions',
      active: 'Active',
      inactive: 'Inactive',
      disabled: 'Disabled',
      banned: 'Banned',
      normalUser: 'Normal User',
      adminUser: 'Administrator',
      confirmDelete: 'Are you sure you want to delete this user?',
      userInfo: 'User Information',
      permissions: 'Permissions',
      searchByUsername: 'Search by username',
      selectStatus: 'Select status',
      selectUserType: 'Select user type',
      all: 'All',
      query: 'Search',
      resetFilters: 'Reset Filters',
      selected: 'Selected',
      users: ' users',
      batchDelete: 'Batch Delete',
      batchEnable: 'Batch Enable',
      batchDisable: 'Batch Disable',
      batchSetLevel: 'Batch Set Level',
      setToLevel: 'Set to Level {level}',
      levelSetting: 'Level Setting',
      toggleStatus: 'Toggle Status',
      enable: 'Enable',
      disable: 'Disable',
      resetPassword: 'Reset Password',
      levelTag: 'Level {level}',
      confirmBatchDelete: 'Are you sure you want to batch delete selected users?',
      confirmToggleStatus: 'Are you sure you want to {action} this user?',
      confirmResetPassword: 'Are you sure you want to reset this user\'s password?',
      deleteSuccess: 'Deleted successfully',
      deleteFailed: 'Delete failed',
      updateSuccess: 'Updated successfully',
      updateFailed: 'Update failed',
      resetPasswordSuccess: 'Password reset successfully',
      resetPasswordFailed: 'Password reset failed',
      newPassword: 'New Password',
      passwordResetInfo: 'New password generated, please copy and send to user',
      copyPassword: 'Copy Password',
      loadUsersFailed: 'Failed to load user list'
    },
    providers: {
      title: 'Provider Management',
      addProvider: 'Add Server',
      editProvider: 'Edit Server',
      deleteProvider: 'Delete Server',
      providerName: 'Provider Name',
      providerType: 'Provider Type',
      apiEndpoint: 'API Endpoint',
      status: 'Status',
      location: 'Location',
      testConnection: 'Test Connection',
      connectionSuccess: 'Connection successful',
      connectionFailed: 'Connection failed',
      confirmDelete: 'Are you sure you want to delete this server?',
      searchByName: 'Search by provider name',
      selectType: 'Provider Type',
      selectStatus: 'Status',
      statusActive: 'Active',
      statusOffline: 'Offline',
      statusFrozen: 'Frozen',
      search: 'Search',
      reset: 'Reset',
      loadProvidersFailed: 'Failed to load provider list',
      proxmox: 'ProxmoxVE',
      lxd: 'LXD',
      incus: 'Incus',
      docker: 'Docker',
      
      // Table column translation keys
      sshPort: 'SSH Port',
      container: 'Container',
      vm: 'VM',
      notConfigured: 'Not Configured',
      connectionStatus: 'Connection Status',
      expiryTime: 'Expiry Time',
      neverExpires: 'Never Expires',
      trafficUsage: 'Traffic Usage',
      trafficExceeded: 'Traffic Exceeded',
      serverStatus: 'Server Status',
      frozen: 'Frozen',
      expired: 'Expired',
      nodeResources: 'Node Resources',
      cores: 'Cores',
      totalSpace: 'Total Space',
      notSynced: 'Not Synced',
      instances: 'Instances',
      taskStatus: 'Task Status',
      runningTasks: 'Running Tasks',
      concurrent: 'Concurrent',
      serial: 'Serial',
      polling: 'Polling',
      pollingDisabled: 'Polling Disabled',
      
      serverName: 'Server Name',
      serverType: 'Server Type',
      host: 'Host Address',
      hostAddress: 'Host Address',
      port: 'Port',
      description: 'Description',
      architecture: 'Architecture',
      region: 'Region',
      country: 'Country',
      city: 'City',
      username: 'Username',
      password: 'Password',
      sshKey: 'SSH Key',
      connectTimeout: 'Connect Timeout',
      executeTimeout: 'Execute Timeout',
      storagePool: 'Storage Pool',
      defaultPortCount: 'Default Port Count',
      portRangeStart: 'Port Range Start',
      portRangeEnd: 'Port Range End',
      networkType: 'Network Type',
      defaultInboundBandwidth: 'Default Inbound Bandwidth',
      defaultOutboundBandwidth: 'Default Outbound Bandwidth',
      maxInboundBandwidth: 'Max Inbound Bandwidth',
      maxOutboundBandwidth: 'Max Outbound Bandwidth',
      maxTraffic: 'Max Traffic Limit',
      
      serverNamePlaceholder: 'Please enter server name',
      serverTypePlaceholder: 'Please select server type',
      hostPlaceholder: 'Please enter host address',
      portPlaceholder: 'Please enter SSH port',
      descriptionPlaceholder: 'Please enter description',
      regionPlaceholder: 'Please enter region',
      countryPlaceholder: 'Please select country',
      cityPlaceholder: 'Please enter city',
      usernamePlaceholder: 'Please enter SSH username',
      passwordPlaceholder: 'Please enter SSH password',
      passwordEditPlaceholder: 'Leave blank to keep current',
      passwordKeepTip: 'Leave blank to keep current password',
      passwordOrKeyTip: 'Password or SSH key (choose one), SSH key takes priority',
      sshKeyPlaceholder: 'Paste SSH private key content (complete from BEGIN to END)',
      sshKeyEditPlaceholder: 'Leave blank to keep current',
      sshKeyCreateTip: 'SSH key takes priority over password',
      sshKeyEditTip: 'Leave blank to keep current SSH key',
      authMethod: 'Auth Method',
      usePassword: 'Use Password',
      useSSHKey: 'Use SSH Key',
      passwordRequired: 'Please enter SSH password',
      sshKeyRequired: 'Please enter SSH private key',
      storagePoolPlaceholder: 'ProxmoxVE storage pool name',
      networkTypePlaceholder: 'Please select network type',
      
      serverNameTip: 'Set an easily recognizable name for the server',
      hostTip: 'IP address or domain name',
      descriptionTip: 'Server purpose or note information',
      regionTip: 'Server region for filtering and display',
      countryTip: 'Server country, supports Chinese and English',
      cityTip: 'Server city, supports Chinese and English',
      architectureTip: 'Select server CPU architecture, affects available system images',
      passwordKeepTip: 'Leave blank to keep current password',
      connectTimeoutTip: 'SSH connection establishment timeout',
      executeTimeoutTip: 'Command execution timeout',
      defaultPortCountTip: 'Default number of ports allocated per instance',
      portRangeStartTip: 'Port mapping available range start value',
      portRangeEndTip: 'Port mapping available range end value',
      defaultInboundBandwidthTip: 'Default inbound bandwidth limit (Mbps), default value when creating instance',
      defaultOutboundBandwidthTip: 'Default outbound bandwidth limit (Mbps), default value when creating instance',
      maxInboundBandwidthTip: 'Maximum inbound bandwidth limit (Mbps), instances cannot exceed this value',
      maxOutboundBandwidthTip: 'Maximum outbound bandwidth limit (Mbps), instances cannot exceed this value',
      maxTrafficTip: 'Maximum traffic limit (TB), supports decimals, default 1TB, automatically resets on the 1st of each month',
      proxmoxStorageTip: 'ProxmoxVE storage pool name, used to store VM disks and containers, e.g.: local, local-lvm, nfs-storage',
      
      basicInfo: 'Basic Info',
      connectionConfig: 'Connection Config',
      locationInfo: 'Location Info',
      virtualizationConfig: 'Virtualization Config',
      ipMappingConfig: 'IP Mapping Config',
      bandwidthConfig: 'Bandwidth Config',
      levelLimits: 'Level Limits',
      advancedSettings: 'Advanced Settings',
      
      sshTimeoutConfig: 'SSH Timeout Config',
      connectionTest: 'Connection Test',
      testing: 'Testing',
      testSSH: 'Test SSH Connection',
      testResults: 'Test Results',
      minLatency: 'Min Latency',
      maxLatency: 'Max Latency',
      avgLatency: 'Avg Latency',
      recommendedTimeout: 'Recommended Timeout',
      applyRecommended: 'Apply Recommended',
      seconds: 'seconds',
      
      supportTypes: 'Support Types',
      supportContainer: 'Support Container',
      supportVM: 'Support VM',
      containerTech: 'Support Docker, LXC and other container technologies',
      vmTech: 'Support KVM, Xen and other virtualization technologies',
      dockerOnlyContainer: 'Docker only supports containers; Incus/LXD supports containers and VMs; ProxmoxVE only supports VMs',
      selectVirtType: 'Please select at least one virtualization type',
      instanceLimits: 'Instance Limits',
      maxContainers: 'Max Containers',
      maxVMs: 'Max VMs',
      zeroUnlimited: '0=unlimited',
      maxContainersTip: 'Set maximum container count, 0 means unlimited',
      maxVMsTip: 'Set maximum VM count, 0 means unlimited',
      
      containerResourceLimits: 'Container Resource Limits Config',
      vmResourceLimits: 'VM Resource Limits Config',
      configDescription: 'Configuration Description',
      enableLimitTip: 'Enable Limit: Resource counts toward Provider total, strict quota management',
      noLimitTip: 'No Limit: Resource does not count toward Provider total, allows overallocation, but instances still have resource limits',
      limitCPU: 'Limit CPU',
      limitMemory: 'Limit Memory',
      limitDisk: 'Limit Disk',
      limited: 'Limited',
      unlimited: 'Unlimited',
      defaultNoLimitCPU: 'Default: no CPU core limit',
      defaultNoLimitMemory: 'Default: no memory size limit',
      defaultLimitDisk: 'Default: limit disk size',
      defaultLimitCPU: 'Default: limit CPU cores',
      defaultLimitMemory: 'Default: limit memory size',
      
      portMappingConfigTitle: 'Port Mapping Configuration Description',
      portMappingConfigMessage: 'Configure server port mapping strategy and IP address allocation method, determines how instances provide external services.',
      natIPv4: 'NAT IPv4',
      natIPv4IPv6: 'NAT IPv4 + Dedicated IPv6',
      dedicatedIPv4: 'Dedicated IPv4',
      dedicatedIPv4IPv6: 'Dedicated IPv4 + Dedicated IPv6',
      ipv6Only: 'IPv6 Only',
      networkTypeTip: 'NAT IPv4: Multiple instances share public IPv4; Dedicated IPv4: Each instance has dedicated IPv4; IPv6 Only: Configure IPv6 address only',
      
      ipv4PortMappingMethod: 'IPv4 Port Mapping Method',
      ipv6PortMappingMethod: 'IPv6 Port Mapping Method',
      ipv4PortMappingMethodPlaceholder: 'Please select IPv4 port mapping method',
      ipv6PortMappingMethodPlaceholder: 'Please select IPv6 port mapping method',
      deviceProxyRecommended: 'Device Proxy (Recommended)',
      nativeRecommended: 'Native Implementation (Recommended)',
      ipv4PortMappingMethodTip: 'IPv4 port mapping implementation, device_proxy has better performance but requires newer LXD/Incus version',
      ipv6PortMappingMethodTip: 'IPv6 port mapping implementation, device_proxy has better performance but requires newer LXD/Incus version',
      proxmoxIPv4MappingTip: 'NAT mode can only use iptables, dedicated IP mode recommends native implementation',
      proxmoxIPv6MappingTip: 'IPv6 uses native implementation by default, better performance',
      
      mappingTypeDescription: 'Mapping Type Description',
      natMapping: 'NAT Mapping',
      natMappingDesc: 'Multiple instances share host IPv4 address, accessed through different ports',
      dedicatedMapping: 'Dedicated Mapping',
      dedicatedMappingDesc: 'Each instance is allocated a dedicated public IPv4 address',
      ipv6Support: 'IPv6 Support',
      ipv6SupportDesc: 'Created instances are automatically assigned dedicated IPv6 addresses',
      dockerMappingDesc: 'IPv4/IPv6 both use native implementation, not selectable',
      lxdIncusMappingDesc: 'IPv4 defaults to Device Proxy; IPv6 defaults to Device Proxy, can select Iptables',
      proxmoxMappingDesc: 'IPv4 NAT mode defaults to Iptables, dedicated IP mode defaults to native implementation; IPv6 defaults to native implementation',
      
      bandwidthConfigTitle: 'Bandwidth Configuration Description',
      bandwidthConfigDesc: 'Configure server default bandwidth limits and maximum bandwidth caps, affects all instances created on this server.',
      trafficConfig: 'Traffic Config',
      bandwidthMechanismTitle: 'Bandwidth Limit Mechanism Description',
      defaultBandwidth: 'Default Bandwidth',
      defaultBandwidthDesc: 'Initial bandwidth limit when creating instance, adjusted based on user level',
      maxBandwidth: 'Max Bandwidth',
      maxBandwidthDesc: 'Bandwidth cap that no instance on this server can exceed',
      userLevel: 'User Level',
      userLevelDesc: 'Final bandwidth = min(user level limit, default bandwidth, max bandwidth)',
      trafficLimit: 'Traffic Limit',
      trafficLimitDesc: 'Automatically resets on the 1st of each month, Provider will be throttled after exceeding limit',
      
      levelLimitsTip: 'Provider level limits (actual limit = min(global limit, provider limit))',
      resetToDefault: 'Reset to Default',
      level: 'Level',
      maxInstances: 'Max Instances',
      maxTrafficMB: 'Max Traffic (MB)',
      maxCPU: 'Max CPU Cores',
      maxMemoryMB: 'Max Memory (MB)',
      maxDiskMB: 'Max Disk (MB)',
      maxBandwidthMbps: 'Max Bandwidth (Mbps)',
      
      expiresAt: 'Expires At',
      expiresAtPlaceholder: 'Please select expiration time',
      expiresAtTip: 'Defaults to 31 days if not set, server will be frozen after expiration',
      concurrencyControl: 'Task Concurrency Control',
      allowConcurrentTasks: 'Allow Concurrent Tasks',
      allowConcurrentTasksTip: 'Whether to allow concurrent execution of multiple tasks on the same Provider (create, delete, operate instances, etc.)',
      maxConcurrentTasks: 'Max Concurrent Tasks',
      maxConcurrentTasksTip: 'Maximum number of tasks executed simultaneously, recommended to set based on server performance',
      
      taskPollingSettings: 'Task Polling Settings',
      enableTaskPolling: 'Enable Task Polling',
      enableTaskPollingTip: 'Whether to enable task polling detection for this Provider, tasks will not execute automatically when disabled',
      taskPollInterval: 'Poll Interval',
      taskPollIntervalTip: 'Interval for detecting pending tasks, range 5-300 seconds, default 60 seconds, frequent polling increases system load',
      
      executionRules: 'Operation Execution Rules',
      executionRule: 'Execution Rule',
      executionRulePlaceholder: 'Please select operation rotation rule',
      executionRuleAuto: 'Auto Switch',
      executionRuleAutoTip: 'Auto switch to SSH when API unavailable',
      executionRuleAPIOnly: 'API Only',
      executionRuleAPIOnlyTip: 'Use API interface only',
      executionRuleSSHOnly: 'SSH Only',
      executionRuleSSHOnlyTip: 'Use SSH connection only',
      executionRuleTip: 'Select how Provider executes tasks and operations (except health checks). Auto Switch: Use SSH automatically when API unavailable; API Only: Use API interface only; SSH Only: Use SSH connection only',
      
      autoConfigAPI: 'API Auto Configuration',
      configHistory: '{type} Configuration History',
      configHistoryMessage: 'Configuration history detected for this Provider, please select an action:',
      runningConfigTask: 'Running Configuration Task',
      taskID: 'Task ID',
      startTime: 'Start Time',
      executor: 'Executor',
      configHistoryRecords: 'Configuration History Records',
      executionTime: 'Execution Time',
      duration: 'Duration',
      result: 'Result',
      viewLog: 'View Log',
      viewRunningTaskLog: 'View Running Task Log',
      rerunConfig: 'Rerun Configuration',
      
      taskLog: 'Task Execution Log',
      loadingTaskLog: 'Loading task log...',
      taskInfo: 'Task Information',
      taskType: 'Task Type',
      completionTime: 'Completion Time',
      executionLog: 'Execution Log',
      copyLog: 'Copy Log',
      
      addServer: 'Add Server',
      editServer: 'Edit Server',
      autoConfigureAPI: 'Auto Configure API',
      healthCheck: 'Health Check',
      freeze: 'Freeze',
      unfreeze: 'Unfreeze',
      serverUpdateSuccess: 'Server updated successfully',
      serverAddSuccess: 'Server added successfully',
      serverDeleteSuccess: 'Server deleted successfully',
      serverFrozen: 'Server frozen',
      serverUnfrozen: 'Server unfrozen',
      healthCheckComplete: 'Health check completed',
      logCopied: 'Log copied',
      
      // Form validation messages
      validation: {
        serverNameRequired: 'Please enter server name',
        serverNamePattern: 'Server name can only contain letters and numbers',
        serverNameMaxLength: 'Server name must be at most 7 characters',
        serverTypeRequired: 'Please select server type',
        hostRequired: 'Please enter host address',
        portRequired: 'Please enter port',
        usernameRequired: 'Please enter username',
        architectureRequired: 'Please select server architecture',
        statusRequired: 'Please select status',
        dateFormatError: 'Please enter correct date format or leave blank',
        autoConfiguring: 'Auto-configuring, please wait...',
        healthChecking: 'Performing health check, please wait...'
      }
    },
    config: {
      title: 'System Configuration',
      generalSettings: 'General Settings',
      authSettings: 'Authentication Settings',
      emailSettings: 'Email Settings',
      oauth2Settings: 'OAuth2 Settings',
      systemSettings: 'System Settings',
      siteName: 'Site Name',
      siteUrl: 'Site URL',
      enableRegistration: 'Enable Registration',
      requireEmailVerification: 'Require Email Verification',
      enableInviteCode: 'Enable Invite Code',
      saveSettings: 'Save Settings',
      settingsSaved: 'Settings saved',
      
      // Basic Authentication
      basicAuth: 'Basic Authentication',
      emailLogin: 'Email Login',
      emailLoginHint: 'When enabled, users can log in with email and password',
      publicRegistration: 'Public Registration',
      publicRegistrationHelp: 'When enabled, new users can freely register; when disabled, only registration via invite code is allowed',
      telegramLogin: 'Telegram Login',
      telegramLoginHint: 'When enabled, users can log in with Telegram account',
      qqLogin: 'QQ Login',
      qqLoginHint: 'When enabled, users can log in with QQ account',
      oauth2Hint: 'When enabled, users can log in via OAuth2 protocol',
      inviteCodeSystem: 'Invite Code System',
      inviteCodeSystemHint: 'When enabled, invite codes can be generated for user registration',
      
      // Email Configuration
      emailConfig: 'Email Configuration',
      smtpConfigDesc: 'SMTP Email Server Configuration',
      smtpConfigHint: 'Used to send verification emails, password reset emails, and other system emails',
      smtpHost: 'SMTP Server Address',
      smtpHostPlaceholder: 'e.g.: smtp.gmail.com',
      smtpPort: 'SMTP Server Port',
      smtpPortPlaceholder: 'e.g.: 587',
      emailUsername: 'Email Username',
      emailUsernamePlaceholder: 'Sender email address',
      emailPassword: 'Email Password',
      emailPasswordPlaceholder: 'SMTP password or authorization code',
      
      // Third-party Login
      thirdPartyLogin: 'Third-party Login',
      telegramConfig: 'Telegram Configuration',
      telegramBotTokenPlaceholder: 'Enter Telegram Bot Token',
      qqConfig: 'QQ Configuration',
      qqAppIdPlaceholder: 'Enter QQ App ID',
      qqAppKeyPlaceholder: 'Enter QQ App Key',
      
      // User Levels
      userLevel: 'User Levels',
      userLevelDesc: 'User Level Description',
      userLevelHint: 'The system supports 5 user levels, each with different resource quotas',
      autoSyncHint: 'Changes to level configuration will be automatically synced to all users of that level',
      resourceLimitWarning: 'Please set resource limits for each level reasonably based on actual resources',
      newUserDefaultLevel: 'New User Default Level',
      selectDefaultLevel: 'Select default level',
      levelN: 'Level {level}',
      levelLimitsConfig: 'Level Quota Configuration',
      levelNLimits: 'Level {level} Quota',
      defaultLevel: 'Default Level',
      maxInstances: 'Max Instances',
      maxCPU: 'Max CPU Cores',
      maxMemoryMB: 'Max Memory (MB)',
      maxDiskMB: 'Max Disk (MB)',
      maxBandwidthMbps: 'Max Bandwidth (Mbps)',
      trafficLimitMB: 'Traffic Limit (MB)',
      
      // Instance Permissions
      instancePermissions: 'Instance Permissions',
      instancePermissionsDesc: 'Instance Type Permissions Description',
      instancePermissionsHint: 'Configure minimum user level requirements for different instance types and operations. You can separately set minimum levels for container and VM creation, deletion, and system reset operations.',
      createPermissions: 'Create Permissions',
      containerCreateMinLevel: 'Min Level for Container Creation',
      vmCreateMinLevel: 'Min Level for VM Creation',
      containerCreateHint: 'Containers use fewer resources, recommended to set a lower threshold',
      vmCreateHint: 'VMs require more resources, recommended to set an appropriate threshold',
      deletePermissions: 'Delete Permissions',
      containerDeleteMinLevel: 'Min Level for Container Deletion',
      vmDeleteMinLevel: 'Min Level for VM Deletion',
      containerDeleteHint: 'Level requirement for container deletion operations',
      vmDeleteHint: 'Level requirement for VM deletion operations',
      resetPermissions: 'System Reset Permissions',
      containerResetMinLevel: 'Min Level for Container System Reset',
      vmResetMinLevel: 'Min Level for VM System Reset',
      containerResetHint: 'Level requirement for container system reset operations',
      vmResetHint: 'Level requirement for VM system reset operations',
      selectLevel: 'Select Level',
      permissionsSuggestions: 'Permission Setting Suggestions',
      containerCreateSuggestion: 'Container creation: Uses less resources, level 1 recommended',
      vmCreateSuggestion: 'VM creation: Uses more resources, level 2-3 or above recommended',
      containerDeleteResetSuggestion: 'Container delete/reset: Level 1-2 recommended, relatively safe',
      vmDeleteResetSuggestion: 'VM delete/reset: Level 2 or above recommended to avoid accidental operations',
      
      // Other Configuration
      otherConfig: 'Other Configuration',
      avatarUploadConfig: 'Avatar Upload Configuration',
      avatarUploadDesc: 'Configure maximum file size limit for user avatar uploads. Only PNG and JPEG format image files are supported.',
      avatarUploadSettings: 'Avatar Upload Settings',
      maxAvatarSize: 'Max Avatar Size',
      maxAvatarSizeHint: 'MB, recommended to set between 1-5 MB, default 2 MB',
      supportedFormats: 'Supported Formats',
      supportedFormatsHint: 'Only these two formats are supported, cannot be modified',
      
      // Buttons
      saveCurrentConfig: 'Save Current Configuration',
      resetConfig: 'Reset Configuration',
      
      // Messages
      loadConfigFailed: 'Failed to load configuration',
      loadPermissionsFailed: 'Failed to load instance type permissions configuration',
      levelConfigEmpty: 'Configuration for level {level} cannot be empty',
      maxInstancesInvalid: 'Max instances for level {level} cannot be empty or less than or equal to 0',
      trafficLimitInvalid: 'Traffic limit for level {level} cannot be empty or less than or equal to 0',
      resourceConfigEmpty: 'Resource configuration for level {level} cannot be empty',
      maxCPUInvalid: 'Max CPU cores for level {level} cannot be empty or less than or equal to 0',
      maxMemoryInvalid: 'Max memory for level {level} cannot be empty or less than or equal to 0',
      maxDiskInvalid: 'Max disk for level {level} cannot be empty or less than or equal to 0',
      maxBandwidthInvalid: 'Max bandwidth for level {level} cannot be empty or less than or equal to 0',
      saveSuccess: 'Configuration saved successfully, user resource limits have been automatically synced',
      saveFailed: 'Failed to save configuration: {error}',
      configReset: 'Configuration has been reset'
    },
    announcements: {
      title: 'Announcement Management',
      addAnnouncement: 'Add Announcement',
      editAnnouncement: 'Edit Announcement',
      deleteAnnouncement: 'Delete Announcement',
      announcementTitle: 'Announcement Title',
      announcementContent: 'Announcement Content',
      content: 'Content', // Table column
      isSticky: 'Sticky', // Table column
      type: 'Type',
      typeTopbar: 'Top Bar',
      displayLocation: 'Display Location',
      homepage: 'Homepage',
      dashboard: 'Dashboard',
      topbar: 'Top Bar',
      priority: 'Priority',
      publishDate: 'Publish Date',
      expiryDate: 'Expiry Date',
      startTime: 'Start Time',
      endTime: 'End Time',
      selectStartTime: 'Select start time',
      selectEndTime: 'Select end time',
      confirmDelete: 'Are you sure you want to delete this announcement?',
      selectType: 'Select announcement type',
      all: 'All',
      homepageAnnouncement: 'Homepage Announcement',
      topbarAnnouncement: 'Top Bar Announcement',
      selectStatus: 'Select status',
      searchTitle: 'Search title',
      resetFilters: 'Reset Filters',
      batchDelete: 'Batch Delete',
      batchToggleStatus: 'Batch Toggle Status',
      selected: 'Selected',
      loadAnnouncementsFailed: 'Failed to load announcement list'
    },
    inviteCodes: {
      title: 'Invite Code Management',
      createCustomCode: 'Create Custom Invite Code',
      batchGenerate: 'Batch Generate Invite Codes',
      usageStatus: 'Usage Status',
      unused: 'Unused',
      used: 'Used',
      available: 'Available',
      expired: 'Expired',
      exportSelected: 'Export Selected',
      deleteSelected: 'Delete Selected',
      code: 'Invite Code',
      maxUses: 'Max Uses',
      unlimited: 'Unlimited',
      usedCount: 'Used Count',
      expiryDate: 'Expiry Date',
      neverExpires: 'Never Expires',
      codeInputPlaceholder: 'Please enter custom invite code',
      codeFormatTip: 'Invite code can only contain numbers and uppercase letters',
      maxUsesTip: 'Set to 0 for unlimited uses',
      selectExpiryDate: 'Select expiry date',
      expiryDateTip: 'Leave blank for never expires',
      descriptionPlaceholder: 'Invite code purpose description',
      generateCount: 'Generate Count',
      generate: 'Generate',
      exportCodes: 'Export Invite Codes',
      codeRequired: 'Please enter invite code',
      codeLengthError: 'Invite code length must be 3-50 characters',
      codeFormatError: 'Invite code can only contain numbers and uppercase letters',
      maxUsesRequired: 'Please enter max uses',
      countRequired: 'Please enter generate count',
      loadFailed: 'Failed to load invite code list',
      selectToExport: 'Please select invite codes to export',
      exportFailed: 'Failed to export invite codes',
      selectToDelete: 'Please select invite codes to delete',
      batchDeleteConfirm: 'Are you sure you want to delete the selected {count} invite codes? This operation cannot be undone.',
      batchDeleteTitle: 'Batch Delete Invite Codes',
      batchDeleteSuccess: 'Batch delete successful',
      batchDeleteFailed: 'Batch delete failed',
      nothingToCopy: 'Nothing to copy',
      copiedToClipboard: 'Copied to clipboard',
      copyFailed: 'Copy failed, please copy manually',
      createSuccess: 'Custom invite code created successfully',
      createFailed: 'Failed to create invite code',
      generateSuccess: 'Invite codes generated successfully',
      generateFailed: 'Failed to generate invite codes',
      deleteConfirm: 'Are you sure you want to delete this invite code? This operation cannot be undone.',
      deleteTitle: 'Delete Invite Code',
      deleteSuccess: 'Delete successful',
      deleteFailed: 'Delete failed'
    },
    systemImages: {
      title: 'System Images',
      addImage: 'Add Image',
      editImage: 'Edit Image',
      imageName: 'Image Name',
      providerType: 'Provider Type',
      instanceType: 'Instance Type',
      vm: 'VM',
      container: 'Container',
      architecture: 'Architecture',
      osType: 'Operating System',
      osVersion: 'OS Version',
      version: 'Version',
      size: 'Size',
      active: 'Active',
      inactive: 'Inactive',
      activate: 'Activate',
      searchPlaceholder: 'Enter image name, description or OS',
      selectProviderType: 'Please select provider type',
      selectInstanceType: 'Please select instance type',
      selectArchitecture: 'Please select architecture',
      selectOsType: 'Please select operating system',
      selectOsVersion: 'Please select or enter version',
      selectedCount: '{count} selected',
      batchActivate: 'Batch Activate',
      batchDisable: 'Batch Disable',
      batchDelete: 'Batch Delete',
      imageNamePlaceholder: 'Please enter image name',
      imageUrl: 'Image URL',
      imageUrlPlaceholder: 'Please enter image download URL',
      fileSize: 'File Size (bytes)',
      checksum: 'Checksum',
      checksumPlaceholder: 'File checksum (optional)',
      tags: 'Tags',
      tagsPlaceholder: 'Multiple tags separated by commas',
      descriptionPlaceholder: 'Please enter image description',
      optional: 'Optional',
      minMemoryMB: 'Min Memory (MB)',
      minMemoryPlaceholder: 'Enter minimum memory requirement (MB)',
      minMemoryHint: 'Minimum memory required to run the image (MB)',
      minDiskMB: 'Min Disk (MB)',
      minDiskPlaceholder: 'Enter minimum disk requirement (MB)',
      minDiskHint: 'Minimum disk space required to install the image (MB)',
      useCdn: 'Use CDN Acceleration',
      useCdnActive: 'CDN Enabled',
      useCdnInactive: 'CDN Disabled',
      useCdnHint: 'Enable CDN acceleration for image downloads. System images are enabled by default',
      imageNameRequired: 'Please enter image name',
      providerTypeRequired: 'Please select provider type',
      instanceTypeRequired: 'Please select instance type',
      architectureRequired: 'Please select architecture',
      urlRequired: 'Please enter image URL',
      urlInvalid: 'Please enter a valid URL',
      minMemoryRequired: 'Please enter minimum memory requirement',
      minMemoryInvalid: 'Minimum memory must be greater than 0',
      minDiskRequired: 'Please enter minimum disk requirement',
      minDiskInvalid: 'Minimum disk must be greater than 0',
      loadFailed: 'Failed to load data',
      updateSuccess: 'Update successful',
      createSuccess: 'Create successful',
      deleteConfirm: 'Are you sure you want to delete image "{name}"?',
      warning: 'Warning',
      confirm: 'Confirm',
      deleteSuccess: 'Delete successful',
      deleteFailed: 'Delete failed',
      toggleStatusConfirm: 'Are you sure you want to {action} image "{name}"?',
      toggleStatusSuccess: '{action} successful',
      toggleStatusFailed: '{action} failed',
      batchDeleteConfirm: 'Are you sure you want to delete the selected {count} images?',
      batchDeleteSuccess: 'Batch delete successful',
      batchDeleteFailed: 'Batch delete failed',
      batchStatusConfirm: 'Are you sure you want to {action} the selected {count} images?',
      batchStatusSuccess: 'Batch {action} successful',
      batchStatusFailed: 'Batch {action} failed'
    },
    instances: {
      title: 'Instance Management',
      allInstances: 'All Instances',
      userInstances: 'User Instances',
      instanceDetails: 'Instance Details',
      owner: 'Owner',
      forceStop: 'Force Stop',
      forceDelete: 'Force Delete',
      batchDelete: 'Batch Delete',
      searchByInstanceName: 'Search by Instance Name',
      searchByProviderName: 'Search by Provider Name',
      filterByStatus: 'Filter by Status',
      filterByType: 'Filter by Type',
      statusRunning: 'Running',
      statusStopped: 'Stopped',
      statusError: 'Error',
      statusFailed: 'Failed',
      statusStarting: 'Starting',
      statusStopping: 'Stopping',
      statusCreating: 'Creating',
      statusRestarting: 'Restarting',
      statusDeleting: 'Deleting',
      typeContainer: 'Container',
      typeVM: 'Virtual Machine',
      instanceName: 'Instance Name',
      instanceType: 'Instance Type',
      specifications: 'Specifications',
      cores: ' Cores',
      ipAddress: 'IP Address',
      sshPort: 'SSH Port',
      system: 'System',
      trafficStatus: 'Traffic Status',
      limited: 'Limited',
      expiryTime: 'Expiry Time',
      resetPassword: 'Reset Password',
      image: 'Image',
      operatingSystem: 'Operating System',
      memory: 'Memory',
      disk: 'Disk',
      bandwidth: 'Bandwidth',
      publicIPv4: 'Public IPv4',
      privateIPv4: 'Private IPv4',
      publicIPv6: 'Public IPv6',
      privateIPv6: 'Private IPv6',
      username: 'Username',
      password: 'Password',
      show: 'Show',
      hide: 'Hide',
      trafficLimit: 'Traffic Limit',
      vnstatInterface: 'vnstat Interface',
      notSet: 'Not Set',
      unassigned: 'Unassigned',
      healthStatus: 'Health Status',
      healthy: 'Healthy',
      unhealthy: 'Unhealthy',
      trafficUsage: 'Traffic Usage',
      inboundTraffic: 'Inbound Traffic',
      outboundTraffic: 'Outbound Traffic',
      loadFailed: 'Failed to load instance list',
      manageConfirm: 'Are you sure to {action} instance "{name}"? The operation will be executed asynchronously as a task.',
      manageTitle: '{action} Instance',
      taskCreated: '{action} task created',
      actionFailed: '{action} failed',
      resetPasswordConfirm: 'Are you sure to reset the password of instance "{name}"?\nThe system will create an asynchronous task to perform the password reset operation.',
      resetPasswordTitle: 'Reset Instance Password',
      resetPasswordSuccess: 'Password reset task created (Task ID: {taskId}), please check the progress in the task list',
      resetPasswordFailed: 'Failed to create password reset task',
      resetPasswordError: 'Failed to create password reset task, please try again later',
      deleteConfirm: 'Are you sure to delete this instance? The deletion will be executed asynchronously as a task, please check the progress in the task list.',
      deleteTitle: 'Delete Instance',
      deleteSuccess: 'Deletion task created, please check the task list for progress',
      selectDeleteWarning: 'Please select instances to delete first',
      batchDeleteConfirm: 'Are you sure to delete {count} selected instances? The deletion will be executed asynchronously as tasks, please check the progress in the task list.',
      batchDeleteTitle: 'Batch Delete Instances',
      batchDeleteSuccess: 'Successfully created deletion tasks for {count} instances, please check the task list for progress',
      batchDeleteAllFailed: 'Batch deletion failed, all instance deletion tasks failed to create',
      batchDeletePartialSuccess: 'Successfully created {success} deletion tasks, {fail} failed',
      batchDeleteFailed: 'Batch deletion failed'
    },
    tasks: {
      title: 'Task Management',
      subtitle: 'Manage all user tasks and force stop running tasks',
      allTasks: 'All Tasks',
      taskQueue: 'Task Queue',
      retryTask: 'Retry Task',
      cancelTask: 'Cancel Task',
      totalTasks: 'Total Tasks',
      pendingTasks: 'Pending',
      runningTasks: 'Running',
      completedTasks: 'Completed',
      failedTasks: 'Failed',
      timeoutTasks: 'Timeout',
      enterUsername: 'Enter Username',
      selectProvider: 'Select Provider',
      selectTaskType: 'Select Task Type',
      selectStatus: 'Select Status',
      selectInstanceType: 'Select Instance Type',
      taskType: 'Task Type',
      progress: 'Progress',
      provider: 'Provider',
      instance: 'Instance',
      remainingTime: 'Remaining Time',
      forceStop: 'Force Stop',
      forceStopTask: 'Force Stop Task',
      taskInfo: 'Task Info',
      stopReason: 'Stop Reason',
      enterStopReason: 'Please enter the reason for force stop',
      taskDetails: 'Task Details',
      taskId: 'Task ID',
      timeoutDuration: 'Timeout Duration',
      startTime: 'Start Time',
      completionTime: 'Completion Time',
      errorMessage: 'Error Message',
      cancelReason: 'Cancel Reason',
      statusMessage: 'Status Message',
      taskTypeCreate: 'Create Instance',
      taskTypeStart: 'Start Instance',
      taskTypeStop: 'Stop Instance',
      taskTypeRestart: 'Restart Instance',
      taskTypeReset: 'Reset System',
      taskTypeDelete: 'Delete Instance',
      taskTypeResetPassword: 'Reset Password',
      taskTypeCreatePortMapping: 'Create Port Mapping',
      taskTypeDeletePortMapping: 'Delete Port Mapping',
      statusPending: 'Pending',
      statusProcessing: 'Processing',
      statusRunning: 'Running',
      statusCompleted: 'Completed',
      statusFailed: 'Failed',
      statusCancelled: 'Cancelled',
      statusCancelling: 'Cancelling',
      statusTimeout: 'Timeout',
      loadFailed: 'Failed to load task list',
      forceStopSuccess: 'Task force stopped successfully',
      cancelTaskConfirm: 'Are you sure to cancel task "{taskType}"?',
      confirmCancel: 'Confirm Cancel',
      cancelSuccess: 'Task cancelled successfully'
    },
    traffic: {
      title: 'Traffic Management',
      subtitle: 'Manage system traffic statistics and user traffic limits',
      totalTraffic: 'Total Traffic',
      inbound: 'Inbound',
      outbound: 'Outbound',
      byUser: 'By User',
      byInstance: 'By Instance',
      timeRange: 'Time Range',
      last24Hours: 'Last 24 Hours',
      last7Days: 'Last 7 Days',
      last30Days: 'Last 30 Days',
      systemOverview: 'System Traffic Overview',
      syncAllTraffic: 'Sync All Traffic',
      monthlyTotalTraffic: 'Monthly Total Traffic',
      uplink: 'Uplink',
      downlink: 'Downlink',
      userStats: 'User Statistics',
      limited: 'Limited',
      providerStats: 'Provider Statistics',
      totalInstances: 'Total Instances',
      activeInstanceStats: 'Active Instance Statistics',
      statsPeriod: 'Statistics Period',
      trafficRanking: 'User Traffic Ranking',
      rank: 'Rank',
      username: 'Username',
      nickname: 'Nickname',
      searchByUsername: 'Search by username',
      searchByNickname: 'Search by nickname',
      monthlyUsage: 'Monthly Usage',
      totalLimit: 'Total Limit',
      usageRate: 'Usage Rate',
      limitedStatus: 'Limited',
      viewDetails: 'View Details',
      syncTraffic: 'Sync Traffic',
      limitTraffic: 'Limit Traffic',
      removeLimit: 'Remove Limit',
      selected: 'Selected',
      users: 'users',
      batchSync: 'Batch Sync',
      batchLimit: 'Batch Limit',
      batchUnlimit: 'Batch Unlimit',
      pleaseSelectUsers: 'Please select users first',
      confirmBatchSync: 'Are you sure you want to sync traffic for the {count} selected users?',
      confirmBatchUnlimit: 'Are you sure you want to remove traffic limit for the {count} selected users?',
      batchSyncSuccess: 'Batch sync task triggered',
      batchSyncFailed: 'Batch sync failed',
      batchSyncError: 'Batch sync failed, please try again later',
      batchLimitFailed: 'Batch limit failed',
      batchLimitError: 'Batch limit failed, please try again later',
      batchUnlimitFailed: 'Batch unlimit failed',
      batchUnlimitError: 'Batch unlimit failed, please try again later',
      noTrafficData: 'No traffic data',
      userTrafficDetails: 'User Traffic Details',
      userId: 'User ID',
      dataSource: 'Data Source',
      vnstatRealtime: 'vnStat Real-time Data',
      trafficResetTime: 'Traffic Reset Time',
      syncNow: 'Sync Now',
      limitUserTraffic: 'Limit User Traffic',
      removeLimitTitle: 'Remove Traffic Limit',
      limitReason: 'Limit Reason',
      enterLimitReason: 'Please enter the limit reason',
      limitReasonMinLength: 'Limit reason must be at least 5 characters',
      limit: 'Limit',
      remove: 'Remove',
      loadOverviewFailed: 'Failed to load system overview',
      loadOverviewError: 'Failed to load system overview, please try again later',
      loadRankingFailed: 'Failed to load traffic ranking',
      loadRankingError: 'Failed to load traffic ranking, please try again later',
      loadUserDetailsFailed: 'Failed to load user traffic details',
      loadUserDetailsError: 'Failed to load user traffic details, please try again later',
      limitActionSuccess: '{action} successful',
      operationError: 'Operation failed, please try again later',
      syncTriggered: 'Traffic sync triggered, data will be updated in the background',
      syncFailed: 'Sync failed',
      syncError: 'Sync failed, please try again later',
      syncAllTriggered: 'System-wide traffic sync triggered, data will be updated in the background'
    },
    portMapping: {
      title: 'Port Mapping Management',
      rangePortInfo: 'Range mapping ports are created with instances and cannot be deleted; manually added ports can be deleted',
      addManualPort: 'Add Manual Port',
      batchDelete: 'Batch Delete',
      searchInstance: 'Search instance name',
      selectProvider: 'Select Provider',
      statusActive: 'Active',
      statusInactive: 'Inactive',
      statusCreating: 'Creating',
      statusFailed: 'Failed',
      portType: 'Port Type',
      manualPort: 'Manual',
      rangePort: 'Range',
      instanceName: 'Instance Name',
      publicIP: 'Public IP',
      publicPort: 'Public Port',
      internalPort: 'Internal Port',
      protocol: 'Protocol',
      notDeletable: 'Not Deletable',
      rangePortNotDeletable: 'Range mapping ports cannot be deleted',
      addPortDialog: 'Add Port Mapping',
      onlyLxdIncusProxmox: 'Only supports manually adding ports for LXD/Incus/Proxmox instances, Docker not supported',
      selectInstance: 'Select Instance',
      searchInstancePlaceholder: 'Search by instance name or ID',
      noInstanceData: 'No instance data',
      noMatchingInstance: 'No matching instances',
      currentInstanceProvider: 'Current Instance Provider',
      pleaseSelectInstance: 'Please select an instance',
      internalPortPlaceholder: 'Enter container/VM internal port',
      autoAssignPort: '0 for auto-assign',
      autoAssignPortHint: 'Leave empty or enter 0 to auto-assign available port',
      descriptionPlaceholder: 'Port usage description (optional)',
      confirmAdd: 'Confirm Add',
      pleaseEnterInternalPort: 'Please enter internal port',
      portRangeError: 'Port range is 1-65535',
      pleaseSelectProtocol: 'Please select protocol',
      loadListFailed: 'Failed to load port mapping list',
      autoRefreshStarted: 'Detected creating ports, starting auto refresh',
      autoRefreshStopped: 'All ports completed, stopping auto refresh',
      loadProvidersFailed: 'Failed to load provider list',
      loadInstancesFailed: 'Failed to load instance list',
      deleteConfirm: 'Are you sure you want to delete this manually added port mapping? It will be removed from the remote server.',
      selectPortsToDelete: 'Please select port mappings to delete',
      onlyManualPortsCanDelete: 'Only manually added ports can be deleted, range mapping ports cannot be deleted',
      batchDeleteConfirm: 'Are you sure you want to delete the selected {count} manually added port mappings? They will be removed from the remote server. This action cannot be undone.',
      batchDeleteTitle: 'Batch Delete Port Mappings',
      batchDeleteSuccess: 'Successfully deleted {count} port mappings',
      batchDeleteFailed: 'Batch delete failed',
      noSupportedInstances: 'No available LXD/Incus/Proxmox instances',
      instanceNotFound: 'Selected instance not found',
      dockerNotSupported: 'Docker instances do not support manually adding ports',
      onlyLxdIncusProxmoxSupported: 'Only LXD/Incus/Proxmox instances support manually adding ports',
      addPortTaskCreated: 'Port mapping task created, configuring remote server in background, please refresh later to check status',
      addPortFailed: 'Failed to add port mapping',
      deletePortTaskCreated: 'Port deletion task created, removing port mapping from remote server in background',
      deletePortSuccess: 'Port deletion task created',
      deletePortFailed: 'Failed to delete port',
      batchDeleteTasksCreated: 'Created {count} deletion tasks',
      batchDeletePartialSuccess: 'Created {success} deletion tasks, {failed} failed',
      totalInstancesFound: 'Found',
      availableInstances: 'available instances',
      showingFirst10: ', showing first 10 (use search to find more)',
      instancesLoadedButNotSupported: 'Loaded {count} instances, but none are supported',
      statusDeleting: 'Deleting',
      statusPending: 'Pending'
    },
    oauth2: {
      title: 'OAuth2 Management',
      notEnabled: 'OAuth2 Feature Not Enabled',
      notEnabledHint: 'OAuth2 login is currently disabled. You can manage OAuth2 provider configurations here, but they will not take effect on the login page.',
      enableHint: 'To enable, please go to',
      enableHint2: 'page to enable OAuth2 feature.',
      systemConfig: 'System Configuration',
      addProvider: 'Add Provider',
      editProvider: 'Edit Provider',
      displayName: 'Display Name',
      identifierName: 'Identifier Name',
      registrationStats: 'Registration Stats',
      unlimited: 'Unlimited',
      callbackUrl: 'Callback URL',
      resetCount: 'Reset Count',
      linuxDoPreset: 'Linux.do Preset',
      idcFlarePreset: 'IDCFlare Preset',
      basicConfig: 'Basic Configuration',
      displayNamePlaceholder: 'e.g.: Linux.do',
      identifierNamePlaceholder: 'e.g.: linuxdo (unique identifier, no duplicates)',
      enableStatus: 'Enable Status',
      displayOrder: 'Display Order',
      displayOrderHint: 'Lower numbers appear first',
      oauth2Credentials: 'OAuth2 Credentials',
      secretPlaceholderEdit: 'Leave empty to keep existing Secret',
      oauth2Endpoints: 'OAuth2 Endpoints',
      authUrl: 'Authorization URL',
      tokenUrl: 'Token URL',
      userInfoUrl: 'User Info URL',
      fieldMapping: 'Field Mapping',
      fieldMappingDesc: 'Field mapping description:',
      requiredFields: 'Required fields: userIdField (User ID), usernameField (Username)',
      optionalFields: 'Optional fields: emailField, avatarField, nicknameField, trustLevelField',
      nestedFieldsSupport: 'Nested fields supported, use dot notation, e.g.: user.profile.name',
      defaultValuesInfo: 'If provider does not return certain fields, system will use default values',
      userIdField: 'User ID Field',
      userIdFieldPlaceholder: 'Default: id',
      usernameField: 'Username Field',
      usernameFieldPlaceholder: 'Default: username',
      emailField: 'Email Field',
      emailFieldPlaceholder: 'Default: email',
      avatarField: 'Avatar Field',
      avatarFieldPlaceholder: 'Default: avatar',
      nicknameField: 'Nickname Field',
      nicknameFieldPlaceholder: 'Optional, e.g.: name or nickname',
      trustLevelField: 'Trust Level Field',
      trustLevelFieldPlaceholder: 'Optional, e.g.: trust_level',
      trustLevelFieldHint: 'For level mapping, such as LinuxDo\'s trust_level',
      levelAndLimits: 'Level & Limits',
      defaultUserLevel: 'Default User Level',
      defaultUserLevelHint: 'Used when level cannot be extracted or no mapping exists',
      levelMappingConfig: 'Level Mapping Configuration',
      externalLevel: 'External Level',
      addMapping: 'Add Mapping',
      levelMappingHint: 'Map external provider levels to system user levels',
      registrationLimit: 'Registration Limit',
      registrationLimitHint: '0 means unlimited',
      currentRegistrations: 'Current Registrations',
      addLevelMapping: 'Add Level Mapping',
      externalLevelValue: 'External Level Value',
      externalLevelPlaceholder: 'e.g.: 0, 1, 2...',
      systemUserLevel: 'System User Level',
      validationName: 'Please enter identifier name',
      validationDisplayName: 'Please enter display name',
      validationClientId: 'Please enter Client ID',
      validationClientSecret: 'Please enter Client Secret',
      validationRedirectUrl: 'Please enter callback URL',
      validationAuthUrl: 'Please enter authorization URL',
      validationTokenUrl: 'Please enter token URL',
      validationUserInfoUrl: 'Please enter user info URL',
      validationUserIdField: 'Please enter user ID field',
      validationUsernameField: 'Please enter username field',
      validationDefaultLevel: 'Please set default level',
      loadProvidersFailed: 'Failed to load provider list',
      linuxDoPresetApplied: 'Linux.do preset applied, please fill in Client ID and Client Secret',
      idcFlarePresetApplied: 'IDCFlare preset applied, please fill in Client ID and Client Secret',
      parseLevelMappingFailed: 'Failed to parse levelMapping:',
      deleteConfirm: 'Are you sure you want to delete provider "{name}"? If users are using this provider, deletion will fail.',
      resetCountConfirm: 'Are you sure you want to reset the registration count for provider "{name}"?',
      resetSuccess: 'Reset successful',
      resetFailed: 'Reset failed',
      enterExternalLevel: 'Please enter external level value'
    }
  },
  validation: {
    required: 'This field is required',
    usernameRequired: 'Please enter username',
    passwordRequired: 'Please enter password',
    captchaRequired: 'Please enter captcha',
    emailRequired: 'Please enter email address',
    emailFormat: 'Please enter a valid email address',
    passwordFormat: 'Password format is incorrect',
    passwordLength: 'Password must be at least 8 characters',
    confirmPasswordMatch: 'The passwords entered do not match',
    usernameLength: 'Username length must be between {min} and {max} characters',
    phoneFormat: 'Please enter a valid phone number',
    urlFormat: 'Please enter a valid URL'
  },
  message: {
    operationSuccess: 'Operation successful',
    operationFailed: 'Operation failed',
    saveSuccess: 'Saved successfully',
    saveFailed: 'Save failed',
    deleteSuccess: 'Deleted successfully',
    deleteFailed: 'Delete failed',
    updateSuccess: 'Updated successfully',
    updateFailed: 'Update failed',
    createSuccess: 'Created successfully',
    createFailed: 'Create failed',
    uploadSuccess: 'Uploaded successfully',
    uploadFailed: 'Upload failed',
    confirmDelete: 'Are you sure you want to delete?',
    confirmAction: 'Are you sure you want to perform this action?',
    networkError: 'Network error, please check your connection',
    serverError: 'Server error, please try again later',
    noData: 'No data',
    loadingData: 'Loading data...',
    pleaseWait: 'Please wait...'
  },
  init: {
    title: 'System Initialization',
    welcome: 'Welcome to OneClickVirt',
    description: 'Please complete the following steps to initialize the system',
    step1: 'Database Configuration',
    step2: 'Admin Account',
    step3: 'System Settings',
    step4: 'Complete',
    next: 'Next',
    previous: 'Previous',
    finish: 'Finish Initialization',
    initializing: 'Initializing...',
    initSuccess: 'System initialization successful',
    initFailed: 'System initialization failed'
  },
  notFound: {
    title: '404',
    message: 'Page not found',
    backToHome: 'Back to Home'
  }
}
